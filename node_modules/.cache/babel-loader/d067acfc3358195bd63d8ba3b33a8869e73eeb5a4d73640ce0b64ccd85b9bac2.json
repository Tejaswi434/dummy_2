{"ast":null,"code":"var _jsxFileName = \"/home/miracle/hackathon/student-management-system/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport Facultylogin from './components/Facultylogin';\nimport Facultyregistartion from './components/Facultyregistartion';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport Forgetpassword from './components/Forgetpassword';\nimport StudentRegistartion from './components/StudentRegistration';\nimport FacultyDashboard from './components/FacultyDashboard';\nimport { useState, createContext } from 'react';\nimport FacultyHeader from './components/FacultyHeader';\nimport CreateTest from './components/CreateTest';\nimport Logout from './components/Logout';\nimport StudentLogin from './components/StudentLogin';\nimport StudentDashboard from './components/StudentDashboard';\nimport TakeTestPage from './components/TakeTestPage';\nimport AttemptingTest from './components/AttemptingTest';\nimport Standard from './components/Standard';\nimport StudentReport from './components/StudentReport';\nimport FacultyTest from './components/FacultyTest';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ToggleContext = /*#__PURE__*/createContext();\nfunction App() {\n  _s();\n  const [fact, setFactId] = useState();\n  const [show, setShow] = useState(0);\n  const [showStudent, setShowStudent] = useState();\n  const handlestudentShow = id => {\n    setShow(2);\n    setShowStudent(id);\n    console.log(\"hello student\");\n  };\n  const handleShow = id => {\n    console.log(id, \"from props\");\n    console.log(show);\n    setFactId(id);\n    setShow(1);\n  };\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/home\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Facultylogin, {\n          handleShow: handleShow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Facultyregistartion, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 28\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }, this);\n  //     if(show ===0){\n  //       return(\n\n  //  \n  //     \n  //   \n  //     <Route path=\"/studentlogin\" element={<StudentLogin handlestudentShow={handlestudentShow} />}/>\n\n  //   \n  //    \n  //       )\n  //     }\n  //     else {\n  //       if(show === 1){\n  //       return( \n  //        \n  //         <BrowserRouter >\n  //         <FacultyDashboard >\n  //           <Routes>\n  //           <Route path=\"/\" element={<Standard/>}/>\n  //           {/* <img src=\"https://repository-images.githubusercontent.com/66\n  //           4891756/e1c8195c-d581-4c6f-afc9-b3fa7c386b6b\"/></Route> */}\n  //             <Route path=\"/studentRegister\" element={<StudentRegistartion/>}/>\n  //             <Route path=\"/create-test\" element={<CreateTest />}/>\n  //             {/* <Route path=\"/FacultyHeader\" element={<Taketest/>}/>\n  //             <Route path=\"/FacultyHeader\" element={<Taketest/>}/> */}\n  //             <Route path=\"/logout\" element={<Logout />}/>\n\n  //             <Route/>\n  //           </Routes>\n  //         </FacultyDashboard>\n  //         </BrowserRouter> \n  //         </ToggleContext.Provider> \n  //       )\n  //     }\n  //     else{ \n  //       return(\n  //         <ToggleContext.Provider value={showStudent}>\n  //       <BrowserRouter >\n\n  //        <StudentDashboard >\n  //         <Routes>\n\n  //            <Route path=\"/take-test\" element={<TakeTestPage/>}/>\n  //           <Route path=\"/attempt-test\" element={<AttemptingTest />}/>\n  //           <Route path=\"/student-report\" element={<StudentReport />} />\n  //           <Route path =\"/faculty-test\" element={<FacultyTest /> }/>\n  //           {/* <Route path=\"/FacultyHeader\" element={<Taketest/>}/>\n  //     //       <Route path=\"/FacultyHeader\" element={<Taketest/>}/> */}\n  //     //       {/* <Route path=\"/logout\" element={<Logout />}/> */}\n  //     //       {/* <Route path=\"/StudentDashboard\" element={<StudentDashboard />}/> */}\n  //          <Route/> \n  //          </Routes>\n  //        </StudentDashboard>\n  //        </BrowserRouter> \n  //        </ToggleContext.Provider>)\n  //     }\n\n  //     }\n\n  //     // else if(showStudent===2){\n\n  //     //   <BrowserRouter >\n\n  //     //   <StudentDashboard >\n  //     //     <Routes>\n\n  //     //        {/* <Route path=\"/studentRegister\" element={<StudentRegistartion/>}/> */}\n  //     //       {/* <Route path=\"/create-test\" element={<CreateTest />}/> */}\n  //     //       {/* <Route path=\"/FacultyHeader\" element={<Taketest/>}/>\n  //     //       <Route path=\"/FacultyHeader\" element={<Taketest/>}/> */}\n  //     //       {/* <Route path=\"/logout\" element={<Logout />}/> */}\n  //     //       {/* <Route path=\"/StudentDashboard\" element={<StudentDashboard />}/> */}\n  //     //       <Route/> \n  //     //     </Routes>\n  //     //   </StudentDashboard>\n  //     //   </BrowserRouter> \n  //     // }\n  //     // else{\n  //     //   console.log(\"hi i am last one \")\n  //     // }\n}\n_s(App, \"5zqXFYsdWqWpxr6cQeqyOIIS43A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Facultylogin","Facultyregistartion","BrowserRouter","Routes","Route","Forgetpassword","StudentRegistartion","FacultyDashboard","useState","createContext","FacultyHeader","CreateTest","Logout","StudentLogin","StudentDashboard","TakeTestPage","AttemptingTest","Standard","StudentReport","FacultyTest","jsxDEV","_jsxDEV","ToggleContext","App","_s","fact","setFactId","show","setShow","showStudent","setShowStudent","handlestudentShow","id","console","log","handleShow","children","path","element","Home","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/miracle/hackathon/student-management-system/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Facultylogin from './components/Facultylogin';\nimport Facultyregistartion from './components/Facultyregistartion'; \nimport { BrowserRouter,Routes,Route } from 'react-router-dom';\nimport Forgetpassword from './components/Forgetpassword'; \nimport StudentRegistartion from './components/StudentRegistration';\nimport FacultyDashboard from './components/FacultyDashboard';\nimport { useState , createContext } from 'react';\nimport FacultyHeader from './components/FacultyHeader';\nimport CreateTest from './components/CreateTest';\nimport Logout from './components/Logout';\nimport StudentLogin from './components/StudentLogin';\nimport StudentDashboard from './components/StudentDashboard';\nimport TakeTestPage from './components/TakeTestPage';\nimport AttemptingTest from './components/AttemptingTest'; \nimport Standard from './components/Standard';\nimport StudentReport from './components/StudentReport';\nimport FacultyTest from './components/FacultyTest';\nexport const ToggleContext = createContext();\n  \nfunction App() {\n  const [fact, setFactId] = useState()\n  const [show, setShow] = useState(0)\n   const [showStudent, setShowStudent] = useState()\n  const handlestudentShow=(id)=>{\n    setShow(2) \n    setShowStudent(id)\n    console.log(\"hello student\")\n  }\n    const handleShow = (id)=>{\n    console.log(id, \"from props\")\n    console.log(show)\n    setFactId(id)\n    setShow(1);\n  }   \nreturn(\n  <BrowserRouter>\n  <Routes>\n<Route path=\"/home\" element={<Home/>}/>\n  <Route path =\"/login\" element={<Facultylogin handleShow = {handleShow} />} /> \n  <Route path=\"/\" element={<Facultyregistartion />}/>\n  </Routes>\n  </BrowserRouter>\n)\n//     if(show ===0){\n//       return(\n       \n//  \n//     \n//   \n//     <Route path=\"/studentlogin\" element={<StudentLogin handlestudentShow={handlestudentShow} />}/>\n    \n//   \n//    \n//       )\n//     }\n//     else {\n//       if(show === 1){\n//       return( \n//        \n//         <BrowserRouter >\n//         <FacultyDashboard >\n//           <Routes>\n//           <Route path=\"/\" element={<Standard/>}/>\n//           {/* <img src=\"https://repository-images.githubusercontent.com/66\n//           4891756/e1c8195c-d581-4c6f-afc9-b3fa7c386b6b\"/></Route> */}\n//             <Route path=\"/studentRegister\" element={<StudentRegistartion/>}/>\n//             <Route path=\"/create-test\" element={<CreateTest />}/>\n//             {/* <Route path=\"/FacultyHeader\" element={<Taketest/>}/>\n//             <Route path=\"/FacultyHeader\" element={<Taketest/>}/> */}\n//             <Route path=\"/logout\" element={<Logout />}/>\n           \n//             <Route/>\n//           </Routes>\n//         </FacultyDashboard>\n//         </BrowserRouter> \n//         </ToggleContext.Provider> \n//       )\n//     }\n//     else{ \n//       return(\n//         <ToggleContext.Provider value={showStudent}>\n//       <BrowserRouter >\n\n//        <StudentDashboard >\n//         <Routes>\n          \n          \n//            <Route path=\"/take-test\" element={<TakeTestPage/>}/>\n//           <Route path=\"/attempt-test\" element={<AttemptingTest />}/>\n//           <Route path=\"/student-report\" element={<StudentReport />} />\n//           <Route path =\"/faculty-test\" element={<FacultyTest /> }/>\n//           {/* <Route path=\"/FacultyHeader\" element={<Taketest/>}/>\n//     //       <Route path=\"/FacultyHeader\" element={<Taketest/>}/> */}\n//     //       {/* <Route path=\"/logout\" element={<Logout />}/> */}\n//     //       {/* <Route path=\"/StudentDashboard\" element={<StudentDashboard />}/> */}\n//          <Route/> \n//          </Routes>\n//        </StudentDashboard>\n//        </BrowserRouter> \n//        </ToggleContext.Provider>)\n//     }\n  \n//     }\n    \n//     // else if(showStudent===2){\n     \n//     //   <BrowserRouter >\n\n//     //   <StudentDashboard >\n//     //     <Routes>\n          \n//     //        {/* <Route path=\"/studentRegister\" element={<StudentRegistartion/>}/> */}\n//     //       {/* <Route path=\"/create-test\" element={<CreateTest />}/> */}\n//     //       {/* <Route path=\"/FacultyHeader\" element={<Taketest/>}/>\n//     //       <Route path=\"/FacultyHeader\" element={<Taketest/>}/> */}\n//     //       {/* <Route path=\"/logout\" element={<Logout />}/> */}\n//     //       {/* <Route path=\"/StudentDashboard\" element={<StudentDashboard />}/> */}\n//     //       <Route/> \n//     //     </Routes>\n//     //   </StudentDashboard>\n//     //   </BrowserRouter> \n//     // }\n//     // else{\n//     //   console.log(\"hi i am last one \")\n//     // }\n }\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}